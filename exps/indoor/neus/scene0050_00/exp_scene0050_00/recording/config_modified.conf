general {
  dataset_type = "indoor"
  scan_name = "scene0050_00"
  exp_name = "exp_scene0050_00"
  exp_dir = "./exps"
  data_dir = "/home/nipopovic/MountedDirs/hl_task_prediction/hl_task_pred_root/data/data_sets/ScanNet_Man_neuris/"
  model_type = "neus"
  recording = [
    "./"
    "./models"
  ]
}
dataset {
  denoise_gray_image = true
  denoise_paras = [
    7
    21
    10
    10
  ]
  patchmatch_start = 60000.0
  patchmatch_mode = "use_geocheck"
  patchmatch_thres_ncc_robust = 0.66
  check_occlusion = true
  mode_init_accum = "model"
  init_accum_reso_level = 4
  init_accum_step_npz = 60000.0
  sample_range_indoor = 2.0
  bbox_size_half = 1.0
  sphere_radius = 1.0
  resolution_level = 1.0
  estimate_scale_mat = false
  cache_all_data = false
  mask_out_image = false
  use_normal = true
  use_planes = false
  use_plane_offset_loss = false
  data_dir = "/home/nipopovic/MountedDirs/hl_task_prediction/hl_task_pred_root/data/data_sets/ScanNet_Man_neuris/indoor/scene0050_00"
}
train {
  batch_size = 512
  learning_rate = 0.0002
  learning_rate_milestone = [
    100000
    150000
    200000
  ]
  learning_rate_factor = 0.5
  end_iter = 160000
  save_freq = 20000
  val_image_freq = 2000
  save_normamap_npz = false
  val_mesh_freq = 5000
  val_depth_freq = 1000000
  val_fields_freq = 1000000
  freq_valid_points = 50000
  freq_valid_weights = 500000
  freq_save_confidence = 2000000
  report_freq = 1000
  validate_resolution_level = 2
  anneal_start = 0
  anneal_end = 25000
  use_white_bkgd = false
  warm_up_end = 5000
  learning_rate_alpha = 0.05
}
model {
  tiny_nerf {
    D = 8
    d_in = 4
    d_in_view = 3
    W = 256
    multires = 10
    multires_view = 4
    output_ch = 4
    skips = [
      4
    ]
    use_viewdirs = true
  }
  nerf {
    D = 8
    d_in = 3
    d_in_view = 3
    W = 256
    multires = 10
    multires_view = 4
    output_ch = 4
    skips = [
      4
    ]
    use_viewdirs = true
  }
  sdf_network {
    bias = 0.6
    d_out = 257
    d_in = 3
    d_hidden = 256
    n_layers = 8
    skip_in = [
      4
    ]
    scale = 1.0
    geometric_init = true
    reverse_geoinit = true
    weight_norm = true
    activation = "softplus"
    multires = 6
    use_emb_c2f = false
    emb_c2f_start = 0.1
    emb_c2f_end = 0.5
  }
  variance_network {
    init_val = 0.3
    use_fixed_variance = false
  }
  rendering_network {
    d_feature = 256
    mode = "idr"
    d_in = 9
    d_out = 3
    d_hidden = 256
    n_layers = 4
    weight_norm = true
    multires_view = 4
    squeeze_out = true
  }
  neus_renderer {
    n_samples = 64
    n_importance = 64
    n_outside = 0
    perturb = 1.0
    alpha_type = "div"
  }
  nerf_renderer {
    n_samples = 64
    n_importance = 64
    n_outside = 0
    perturb = 1.0
  }
  loss {
    color_weight = 1.0
    igr_weight = 0.1
    mask_weight = 0.0
    smooth_weight = 0.0
    depth_weight = 0.0
    normal_weight = 1.0
    plane_loss_milestone = 100000.0
    normal_consistency_weight = 0.0
    manhattan_constrain_weight = 0.0
    plane_offset_weight = 0.0
    warm_up_start = 0
    warm_up_end = 20000.0
  }
}